// Generated from Ontolog.g4 by ANTLR 4.5
package so.ontolog.formula.antlr;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class OntologLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.5", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		T__38=39, T__39=40, T__40=41, END_OF_STMT=42, NUMBER=43, STRING_LITERAL=44, 
		NULL=45, BOOLEAN=46, IDENT=47, WS=48, COMMENT=49, LINE_COMMENT=50;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40", 
		"DIGIT", "LETTER", "END_OF_STMT", "NUMBER", "STRING_LITERAL", "NULL", 
		"BOOLEAN", "IDENT", "WS", "COMMENT", "LINE_COMMENT"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "'['", "']'", "'='", "'('", "')'", "'importJava'", "'import'", "'return'", 
		"'if'", "'{'", "'}'", "'else'", "'foreach'", "'in'", "'while'", "'->'", 
		"'param'", "'as'", "'function'", "':'", "','", "'.'", "'case'", "'=='", 
		"'is'", "'!='", "'<>'", "'not'", "'>'", "'>='", "'<'", "'<='", "'/'", 
		"'-'", "'%'", "'^'", "'*'", "'+'", "'and'", "'or'", "'?'", "';'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, "END_OF_STMT", "NUMBER", "STRING_LITERAL", 
		"NULL", "BOOLEAN", "IDENT", "WS", "COMMENT", "LINE_COMMENT"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public OntologLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Ontolog.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\64\u0168\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64"+
		"\t\64\4\65\t\65\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\7\3"+
		"\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t"+
		"\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\16"+
		"\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\20\3\20\3\20\3\20"+
		"\3\20\3\20\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23"+
		"\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\26\3\26\3\27"+
		"\3\27\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\32\3\32\3\32\3\33\3\33"+
		"\3\33\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\36\3\36\3\37\3\37\3\37\3 \3"+
		" \3!\3!\3!\3\"\3\"\3#\3#\3$\3$\3%\3%\3&\3&\3\'\3\'\3(\3(\3(\3(\3)\3)\3"+
		")\3*\3*\3+\3+\3,\3,\3-\3-\3.\6.\u0102\n.\r.\16.\u0103\3.\3.\6.\u0108\n"+
		".\r.\16.\u0109\5.\u010c\n.\3/\3/\7/\u0110\n/\f/\16/\u0113\13/\3/\3/\3"+
		"/\7/\u0118\n/\f/\16/\u011b\13/\3/\5/\u011e\n/\3\60\3\60\3\60\3\60\3\60"+
		"\3\60\3\60\3\60\3\60\3\60\3\60\5\60\u012b\n\60\3\61\3\61\3\61\3\61\3\61"+
		"\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\5\61"+
		"\u013f\n\61\3\62\3\62\3\62\7\62\u0144\n\62\f\62\16\62\u0147\13\62\3\63"+
		"\6\63\u014a\n\63\r\63\16\63\u014b\3\63\3\63\3\64\3\64\3\64\3\64\7\64\u0154"+
		"\n\64\f\64\16\64\u0157\13\64\3\64\3\64\3\64\3\64\3\64\3\65\3\65\3\65\3"+
		"\65\7\65\u0162\n\65\f\65\16\65\u0165\13\65\3\65\3\65\3\u0155\2\66\3\3"+
		"\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21"+
		"!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!"+
		"A\"C#E$G%I&K\'M(O)Q*S+U\2W\2Y,[-]._/a\60c\61e\62g\63i\64\3\2\7\t\2&&C"+
		"\\aac|\u1102\u1201\u3132\u3191\uac02\ud7b1\5\2\f\f\17\17$$\5\2\f\f\17"+
		"\17))\7\2\13\f\16\17\"\"^^uu\4\2\f\f\17\17\u0175\2\3\3\2\2\2\2\5\3\2\2"+
		"\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21"+
		"\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2"+
		"\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3"+
		"\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3"+
		"\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3"+
		"\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2"+
		"\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2"+
		"]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3"+
		"\2\2\2\3k\3\2\2\2\5m\3\2\2\2\7o\3\2\2\2\tq\3\2\2\2\13s\3\2\2\2\ru\3\2"+
		"\2\2\17\u0080\3\2\2\2\21\u0087\3\2\2\2\23\u008e\3\2\2\2\25\u0091\3\2\2"+
		"\2\27\u0093\3\2\2\2\31\u0095\3\2\2\2\33\u009a\3\2\2\2\35\u00a2\3\2\2\2"+
		"\37\u00a5\3\2\2\2!\u00ab\3\2\2\2#\u00ae\3\2\2\2%\u00b4\3\2\2\2\'\u00b7"+
		"\3\2\2\2)\u00c0\3\2\2\2+\u00c2\3\2\2\2-\u00c4\3\2\2\2/\u00c6\3\2\2\2\61"+
		"\u00cb\3\2\2\2\63\u00ce\3\2\2\2\65\u00d1\3\2\2\2\67\u00d4\3\2\2\29\u00d7"+
		"\3\2\2\2;\u00db\3\2\2\2=\u00dd\3\2\2\2?\u00e0\3\2\2\2A\u00e2\3\2\2\2C"+
		"\u00e5\3\2\2\2E\u00e7\3\2\2\2G\u00e9\3\2\2\2I\u00eb\3\2\2\2K\u00ed\3\2"+
		"\2\2M\u00ef\3\2\2\2O\u00f1\3\2\2\2Q\u00f5\3\2\2\2S\u00f8\3\2\2\2U\u00fa"+
		"\3\2\2\2W\u00fc\3\2\2\2Y\u00fe\3\2\2\2[\u0101\3\2\2\2]\u011d\3\2\2\2_"+
		"\u012a\3\2\2\2a\u013e\3\2\2\2c\u0140\3\2\2\2e\u0149\3\2\2\2g\u014f\3\2"+
		"\2\2i\u015d\3\2\2\2kl\7]\2\2l\4\3\2\2\2mn\7_\2\2n\6\3\2\2\2op\7?\2\2p"+
		"\b\3\2\2\2qr\7*\2\2r\n\3\2\2\2st\7+\2\2t\f\3\2\2\2uv\7k\2\2vw\7o\2\2w"+
		"x\7r\2\2xy\7q\2\2yz\7t\2\2z{\7v\2\2{|\7L\2\2|}\7c\2\2}~\7x\2\2~\177\7"+
		"c\2\2\177\16\3\2\2\2\u0080\u0081\7k\2\2\u0081\u0082\7o\2\2\u0082\u0083"+
		"\7r\2\2\u0083\u0084\7q\2\2\u0084\u0085\7t\2\2\u0085\u0086\7v\2\2\u0086"+
		"\20\3\2\2\2\u0087\u0088\7t\2\2\u0088\u0089\7g\2\2\u0089\u008a\7v\2\2\u008a"+
		"\u008b\7w\2\2\u008b\u008c\7t\2\2\u008c\u008d\7p\2\2\u008d\22\3\2\2\2\u008e"+
		"\u008f\7k\2\2\u008f\u0090\7h\2\2\u0090\24\3\2\2\2\u0091\u0092\7}\2\2\u0092"+
		"\26\3\2\2\2\u0093\u0094\7\177\2\2\u0094\30\3\2\2\2\u0095\u0096\7g\2\2"+
		"\u0096\u0097\7n\2\2\u0097\u0098\7u\2\2\u0098\u0099\7g\2\2\u0099\32\3\2"+
		"\2\2\u009a\u009b\7h\2\2\u009b\u009c\7q\2\2\u009c\u009d\7t\2\2\u009d\u009e"+
		"\7g\2\2\u009e\u009f\7c\2\2\u009f\u00a0\7e\2\2\u00a0\u00a1\7j\2\2\u00a1"+
		"\34\3\2\2\2\u00a2\u00a3\7k\2\2\u00a3\u00a4\7p\2\2\u00a4\36\3\2\2\2\u00a5"+
		"\u00a6\7y\2\2\u00a6\u00a7\7j\2\2\u00a7\u00a8\7k\2\2\u00a8\u00a9\7n\2\2"+
		"\u00a9\u00aa\7g\2\2\u00aa \3\2\2\2\u00ab\u00ac\7/\2\2\u00ac\u00ad\7@\2"+
		"\2\u00ad\"\3\2\2\2\u00ae\u00af\7r\2\2\u00af\u00b0\7c\2\2\u00b0\u00b1\7"+
		"t\2\2\u00b1\u00b2\7c\2\2\u00b2\u00b3\7o\2\2\u00b3$\3\2\2\2\u00b4\u00b5"+
		"\7c\2\2\u00b5\u00b6\7u\2\2\u00b6&\3\2\2\2\u00b7\u00b8\7h\2\2\u00b8\u00b9"+
		"\7w\2\2\u00b9\u00ba\7p\2\2\u00ba\u00bb\7e\2\2\u00bb\u00bc\7v\2\2\u00bc"+
		"\u00bd\7k\2\2\u00bd\u00be\7q\2\2\u00be\u00bf\7p\2\2\u00bf(\3\2\2\2\u00c0"+
		"\u00c1\7<\2\2\u00c1*\3\2\2\2\u00c2\u00c3\7.\2\2\u00c3,\3\2\2\2\u00c4\u00c5"+
		"\7\60\2\2\u00c5.\3\2\2\2\u00c6\u00c7\7e\2\2\u00c7\u00c8\7c\2\2\u00c8\u00c9"+
		"\7u\2\2\u00c9\u00ca\7g\2\2\u00ca\60\3\2\2\2\u00cb\u00cc\7?\2\2\u00cc\u00cd"+
		"\7?\2\2\u00cd\62\3\2\2\2\u00ce\u00cf\7k\2\2\u00cf\u00d0\7u\2\2\u00d0\64"+
		"\3\2\2\2\u00d1\u00d2\7#\2\2\u00d2\u00d3\7?\2\2\u00d3\66\3\2\2\2\u00d4"+
		"\u00d5\7>\2\2\u00d5\u00d6\7@\2\2\u00d68\3\2\2\2\u00d7\u00d8\7p\2\2\u00d8"+
		"\u00d9\7q\2\2\u00d9\u00da\7v\2\2\u00da:\3\2\2\2\u00db\u00dc\7@\2\2\u00dc"+
		"<\3\2\2\2\u00dd\u00de\7@\2\2\u00de\u00df\7?\2\2\u00df>\3\2\2\2\u00e0\u00e1"+
		"\7>\2\2\u00e1@\3\2\2\2\u00e2\u00e3\7>\2\2\u00e3\u00e4\7?\2\2\u00e4B\3"+
		"\2\2\2\u00e5\u00e6\7\61\2\2\u00e6D\3\2\2\2\u00e7\u00e8\7/\2\2\u00e8F\3"+
		"\2\2\2\u00e9\u00ea\7\'\2\2\u00eaH\3\2\2\2\u00eb\u00ec\7`\2\2\u00ecJ\3"+
		"\2\2\2\u00ed\u00ee\7,\2\2\u00eeL\3\2\2\2\u00ef\u00f0\7-\2\2\u00f0N\3\2"+
		"\2\2\u00f1\u00f2\7c\2\2\u00f2\u00f3\7p\2\2\u00f3\u00f4\7f\2\2\u00f4P\3"+
		"\2\2\2\u00f5\u00f6\7q\2\2\u00f6\u00f7\7t\2\2\u00f7R\3\2\2\2\u00f8\u00f9"+
		"\7A\2\2\u00f9T\3\2\2\2\u00fa\u00fb\4\62;\2\u00fbV\3\2\2\2\u00fc\u00fd"+
		"\t\2\2\2\u00fdX\3\2\2\2\u00fe\u00ff\7=\2\2\u00ffZ\3\2\2\2\u0100\u0102"+
		"\5U+\2\u0101\u0100\3\2\2\2\u0102\u0103\3\2\2\2\u0103\u0101\3\2\2\2\u0103"+
		"\u0104\3\2\2\2\u0104\u010b\3\2\2\2\u0105\u0107\7\60\2\2\u0106\u0108\5"+
		"U+\2\u0107\u0106\3\2\2\2\u0108\u0109\3\2\2\2\u0109\u0107\3\2\2\2\u0109"+
		"\u010a\3\2\2\2\u010a\u010c\3\2\2\2\u010b\u0105\3\2\2\2\u010b\u010c\3\2"+
		"\2\2\u010c\\\3\2\2\2\u010d\u0111\7$\2\2\u010e\u0110\n\3\2\2\u010f\u010e"+
		"\3\2\2\2\u0110\u0113\3\2\2\2\u0111\u010f\3\2\2\2\u0111\u0112\3\2\2\2\u0112"+
		"\u0114\3\2\2\2\u0113\u0111\3\2\2\2\u0114\u011e\7$\2\2\u0115\u0119\7)\2"+
		"\2\u0116\u0118\n\4\2\2\u0117\u0116\3\2\2\2\u0118\u011b\3\2\2\2\u0119\u0117"+
		"\3\2\2\2\u0119\u011a\3\2\2\2\u011a\u011c\3\2\2\2\u011b\u0119\3\2\2\2\u011c"+
		"\u011e\7)\2\2\u011d\u010d\3\2\2\2\u011d\u0115\3\2\2\2\u011e^\3\2\2\2\u011f"+
		"\u0120\7p\2\2\u0120\u0121\7w\2\2\u0121\u0122\7n\2\2\u0122\u012b\7n\2\2"+
		"\u0123\u0124\7p\2\2\u0124\u0125\7k\2\2\u0125\u012b\7n\2\2\u0126\u0127"+
		"\7P\2\2\u0127\u0128\7W\2\2\u0128\u0129\7N\2\2\u0129\u012b\7N\2\2\u012a"+
		"\u011f\3\2\2\2\u012a\u0123\3\2\2\2\u012a\u0126\3\2\2\2\u012b`\3\2\2\2"+
		"\u012c\u012d\7v\2\2\u012d\u012e\7t\2\2\u012e\u012f\7w\2\2\u012f\u013f"+
		"\7g\2\2\u0130\u0131\7h\2\2\u0131\u0132\7c\2\2\u0132\u0133\7n\2\2\u0133"+
		"\u0134\7u\2\2\u0134\u013f\7g\2\2\u0135\u0136\7V\2\2\u0136\u0137\7T\2\2"+
		"\u0137\u0138\7W\2\2\u0138\u013f\7G\2\2\u0139\u013a\7H\2\2\u013a\u013b"+
		"\7C\2\2\u013b\u013c\7N\2\2\u013c\u013d\7U\2\2\u013d\u013f\7G\2\2\u013e"+
		"\u012c\3\2\2\2\u013e\u0130\3\2\2\2\u013e\u0135\3\2\2\2\u013e\u0139\3\2"+
		"\2\2\u013fb\3\2\2\2\u0140\u0145\5W,\2\u0141\u0144\5W,\2\u0142\u0144\5"+
		"U+\2\u0143\u0141\3\2\2\2\u0143\u0142\3\2\2\2\u0144\u0147\3\2\2\2\u0145"+
		"\u0143\3\2\2\2\u0145\u0146\3\2\2\2\u0146d\3\2\2\2\u0147\u0145\3\2\2\2"+
		"\u0148\u014a\t\5\2\2\u0149\u0148\3\2\2\2\u014a\u014b\3\2\2\2\u014b\u0149"+
		"\3\2\2\2\u014b\u014c\3\2\2\2\u014c\u014d\3\2\2\2\u014d\u014e\b\63\2\2"+
		"\u014ef\3\2\2\2\u014f\u0150\7\61\2\2\u0150\u0151\7,\2\2\u0151\u0155\3"+
		"\2\2\2\u0152\u0154\13\2\2\2\u0153\u0152\3\2\2\2\u0154\u0157\3\2\2\2\u0155"+
		"\u0156\3\2\2\2\u0155\u0153\3\2\2\2\u0156\u0158\3\2\2\2\u0157\u0155\3\2"+
		"\2\2\u0158\u0159\7,\2\2\u0159\u015a\7\61\2\2\u015a\u015b\3\2\2\2\u015b"+
		"\u015c\b\64\2\2\u015ch\3\2\2\2\u015d\u015e\7\61\2\2\u015e\u015f\7\61\2"+
		"\2\u015f\u0163\3\2\2\2\u0160\u0162\n\6\2\2\u0161\u0160\3\2\2\2\u0162\u0165"+
		"\3\2\2\2\u0163\u0161\3\2\2\2\u0163\u0164\3\2\2\2\u0164\u0166\3\2\2\2\u0165"+
		"\u0163\3\2\2\2\u0166\u0167\b\65\2\2\u0167j\3\2\2\2\20\2\u0103\u0109\u010b"+
		"\u0111\u0119\u011d\u012a\u013e\u0143\u0145\u014b\u0155\u0163\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}